<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>eu.kartoffelquadrat</groupId>
    <artifactId>svgpatcher</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>svgpatcher</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Set maven compiler for source target and bootclasspath to 17-->
        <maven.compiler.release>17</maven.compiler.release>
        <build.name>kq</build.name>
        <main.class>eu.kartoffelquadrat.svgpatcher.SvgPatcher</main.class>
<!--        <jvm.options>-Djavax.xml.accessExternalDTD=all</jvm.options>-->
    </properties>


    <!-- main developer -->
    <developers>
        <developer>
            <name>Maximilian Schiedermeier</name>
            <email>maximilian.schiedermeier@mcgill.ca</email>
            <organization>kartoffelquadrat.eu</organization>
            <organizationUrl>https://github.com/kartoffelquadrat</organizationUrl>
        </developer>
    </developers>

    <!-- legal -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <dependencies>
        <!--Logging-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.11.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.11.2</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <build>
        <finalName>svgpatcher</finalName>
        <plugins>

            <!-- PMD static code analysis -->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-pmd-plugin</artifactId>-->
            <!--                <version>3.13.0</version>-->
            <!--                <configuration>-->
            <!--                    <rulesets>-->
            <!--                        &lt;!&ndash; full list: bestpractices, codestyle, design, documentation, errorprone, multithreading, performance&ndash;&gt;-->
            <!--                        <ruleset>/category/java/bestpractices.xml</ruleset>-->
            <!--                        &lt;!&ndash;                        <ruleset>/category/java/codestyle.xml</ruleset>&ndash;&gt;-->
            <!--                    </rulesets>-->
            <!--                    &lt;!&ndash; failOnViolation is actually true by default, but can be disabled &ndash;&gt;-->
            <!--                    <failOnViolation>true</failOnViolation>-->
            <!--                    &lt;!&ndash; printFailingErrors is pretty useful &ndash;&gt;-->
            <!--                    <printFailingErrors>true</printFailingErrors>-->
            <!--                    <linkXRef>false</linkXRef>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <goals>-->
            <!--                            <goal>check</goal>-->
            <!--                        </goals>-->
            <!--                        &lt;!&ndash; Enforce the pmd:check goal is auto-executed during package phase&ndash;&gt;-->
            <!--                        <phase>package</phase>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

            <!-- enforce passing junit tests as build precondition -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <!-- manual enabling of DTD verification required for unit tests. -->
                <configuration>
                    <argLine>${jvm.options}</argLine>
                </configuration>
            </plugin>

            <!-- specify main class for exec goal -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                </configuration>
            </plugin>

            <!-- Build self contained JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.4.2</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <!-- <finalName>${build.name}</finalName>-->
                    <!-- <appendAssemblyId>false</appendAssemblyId>-->
                </configuration>
            </plugin>

            <!-- add sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Enforce pass of checkstyle (also refuses warnings) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <configLocation>google_checks.xml</configLocation>
                    <consoleOutput>true</consoleOutput>
                    <violationSeverity>warning</violationSeverity>
                    <failOnViolation>true</failOnViolation>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Add documentation to produced JAR and to docs directory for github pages-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <detectJavaApiLink>false</detectJavaApiLink>
                    <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
                    <reportOutputDirectory>${project.reporting.outputDirectory}/docs
                    </reportOutputDirectory>
                    <outputDirectory>docs</outputDirectory>
                    <failOnWarnings>true</failOnWarnings>
                    <quiet>true</quiet>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
